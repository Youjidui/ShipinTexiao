sampler2D g_texSource[8] : register(s0);

float3 Argus[8]         : register(c0);
float3 TextureSize[8]   : register(c10);
float  g_needStrip[8]   : register(c20);

float4 main( float2 texUV : TEXCOORD0,
             int    index : TEXCOORD1 ) : COLOR
{
    float2 fetchUV = texUV;
    
    // splite field if needed
    if ( (bool)g_needStrip[index] )
    {
        float2 texSize = TextureSize[index];
        float3 arg = Argus[index];
        float DivV       = 1.0/texSize.y ;  
        int   iy         = texUV.y * texSize.y - arg.x;
        int   fetchy     = 0;
        if(arg.y == 0)
        {
            if(arg.z == 0)//最终位置是偶数，源Buffer的奇偶关系不变
            {
            fetchy = 2*iy;
            }
            else
            {
            fetchy = 2*iy +1;
            }
        }
        else // arg.y == 1
        {
            if(arg.z == 0) 
            {
            fetchy = 2*iy +1;
            }
            else
            {
                fetchy = 2*iy;
            }
        }       
        clamp( fetchy,0,TextureSize[index].z-1);
        fetchUV.y  = (fetchy + arg.x) * DivV ;
       
   }

    // sampling
    float4 retColor = 0;
         if(index == 0 )    retColor = tex2D( g_texSource[0], fetchUV );
    else if(index == 1 )    retColor = tex2D( g_texSource[1], fetchUV );
    else if(index == 2 )    retColor = tex2D( g_texSource[2], fetchUV );
    else if(index == 3 )    retColor = tex2D( g_texSource[3], fetchUV );
    else if(index == 4 )    retColor = tex2D( g_texSource[4], fetchUV );
    else if(index == 5 )    retColor = tex2D( g_texSource[5], fetchUV );
    else if(index == 6 )    retColor = tex2D( g_texSource[6], fetchUV );
    else if(index == 7 )    retColor = tex2D( g_texSource[7], fetchUV );
    return retColor;
}
